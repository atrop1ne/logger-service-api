syntax = "proto3";

package contracts.v1;

option go_package = "gen/go/contracts/v1";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service Logs {
    rpc GetLogsLevels (google.protobuf.Empty) returns (GetLogsLevelsResponse) {
        option (google.api.http) = {
            get: "/logs/levels"
        };
    }
    rpc GetLogs (GetLogsRequest) returns (GetLogsResponse) {
        option (google.api.http) = {
            get: "/logs"
        };
    }
    rpc Info (SetLogRequest) returns (SetLogResponce) {
        option (google.api.http) = {
            post: "/logs/info"
            body: "*"
        };
    }
    rpc Error (SetLogRequest) returns (SetLogResponce) {
        option (google.api.http) = {
            post: "/logs/error"
            body: "*"
        };
    }
    rpc Warning (SetLogRequest) returns (SetLogResponce) {
        option (google.api.http) = {
            post: "/logs/warning"
            body: "*"
        };
    }
    rpc Debug (SetLogRequest) returns (SetLogResponce) {
        option (google.api.http) = {
            post: "/logs/debug"
            body: "*"
        };
    }
}

message LogLevel {
    int32 id = 1;
    string name = 2;
}

message Log {
    int64 id = 1;
    int32 levelId = 2;
    string date = 3;
    string source = 4;
    string message = 5;
}

message GetLogsLevelsResponse {
    repeated LogLevel logs_levels = 1;
}

message GetLogsRequest {
    string level_ids = 1;
    string source = 2;
    string message = 3;
    string date_from = 4;
    string date_to = 5;
    int32 page = 6;
    int32 count_per_page = 7;
}

message GetLogsResponse {
    repeated Log logs = 1;
}

message SetLogRequest {
    string date = 1;
    string source = 2;
    string message = 3;
}

message SetLogResponce {
    int64 id = 1;
}